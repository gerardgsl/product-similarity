version: "3.9"

services:
  product-similarity:
    build:
      context: .
      dockerfile: Dockerfile
    image: product-similarity:local
    container_name: product-similarity
    environment:
      # Ajusta estas variables a tu app (ver más abajo "Configurar el Feign")
      - SPRING_PROFILES_ACTIVE=docker
      - PRODUCT_API_BASE_URL=http://simulado        # <— base URL del mock
      # Opcional: OpenTelemetry en local (solo para probar)
      # - OTEL_TRACES_EXPORTER=logging
      # - OTEL_SERVICE_NAME=product-similarity-api
    ports:
      - "5000:5000"
    depends_on:
      - simulado
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 10

  simulado:
    image: ldabiralai/simulado:latest
    container_name: simulado
    ports:
      - "3001:80"                           # Expuesto al host por si quieres mirar
    volumes:
      - ./infra/simulado/mocks.json:/app/mocks.json:ro
    command: ./bin/simulado -f /app/mocks.json
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health || curl -fsS http://localhost"]  # simulado devuelve 200 en / por defecto
      interval: 10s
      timeout: 3s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    ports:
      - "9090:9090"
    depends_on:
      - product-similarity

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # (Opcional) stack de carga con k6 + Influx si quieres repetir lo de k6
  influxdb:
    image: influxdb:1.8.2
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./infra/k6:/scripts
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    depends_on:
      - influxdb
      - product-similarity
