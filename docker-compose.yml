version: "3.9"

services:
  product-similarity:
    build:
      context: .
      dockerfile: Dockerfile
    image: product-similarity:local
    container_name: product-similarity
    environment:
      - JAVA_OPTS=-XX:MaxRAMPercentage=75
      # (Opcional) OpenTelemetry si lo usas:
      # - OTEL_SERVICE_NAME=product-similarity-api
      # - OTEL_TRACES_EXPORTER=logging
      # - OTEL_METRICS_EXPORTER=none
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - product-similarity

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # Provisioning auto:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning:ro
      # persistencia opcional:
      # - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

# Volumen persistente opcional
# volumes:
#   grafana-data:
